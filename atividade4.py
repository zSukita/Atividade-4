# SISTEMA COMPLETO - 4 PROGRAMAS EM 1
# Calculadora, Sistema de Notas, Verificador de Senha e Analisador de N√∫meros

def calculadora():
    """1 - CALCULADORA B√ÅSICA"""
    print("\n=== CALCULADORA B√ÅSICA ===")
    print("Opera√ß√µes dispon√≠veis:")
    print("+ (Adi√ß√£o)")
    print("- (Subtra√ß√£o)")
    print("* (Multiplica√ß√£o)")
    print("/ (Divis√£o)")
    print("Digite 'voltar' para retornar ao menu principal")
    
    while True:
        try:
            entrada = input("\nDigite a opera√ß√£o (ex: 5 + 3) ou 'voltar': ").strip()
            
            if entrada.lower() == 'voltar':
                break
            
            if '+' in entrada:
                nums = entrada.split('+')
                resultado = float(nums[0].strip()) + float(nums[1].strip())
                print(f"Resultado: {resultado}")
            
            elif '-' in entrada:
                nums = entrada.split('-')
                resultado = float(nums[0].strip()) - float(nums[1].strip())
                print(f"Resultado: {resultado}")
            
            elif '*' in entrada:
                nums = entrada.split('*')
                resultado = float(nums[0].strip()) * float(nums[1].strip())
                print(f"Resultado: {resultado}")
            
            elif '/' in entrada:
                nums = entrada.split('/')
                num1 = float(nums[0].strip())
                num2 = float(nums[1].strip())
                
                if num2 == 0:
                    print("Erro: Divis√£o por zero n√£o √© permitida!")
                else:
                    resultado = num1 / num2
                    print(f"Resultado: {resultado}")
            
            else:
                print("Opera√ß√£o inv√°lida! Use +, -, * ou /")
        
        except ValueError:
            print("Erro: Digite n√∫meros v√°lidos!")
        except Exception as e:
            print(f"Erro inesperado: {e}")

def sistema_notas():
    """2 - SISTEMA DE REGISTRO DE NOTAS DOS ALUNOS"""
    print("\n=== SISTEMA DE NOTAS DOS ALUNOS ===")
    
    alunos = {}
    
    while True:
        print("\nOp√ß√µes:")
        print("1 - Adicionar aluno e nota")
        print("2 - Ver todas as notas")
        print("3 - Calcular m√©dia da turma")
        print("4 - Voltar ao menu principal")
        
        opcao = input("Escolha uma op√ß√£o: ").strip()
        
        if opcao == '1':
            try:
                nome = input("Nome do aluno: ").strip()
                if not nome:
                    print("Nome n√£o pode estar vazio!")
                    continue
                
                nota = float(input("Nota do aluno (0-10): "))
                
                if 0 <= nota <= 10:
                    alunos[nome] = nota
                    print(f"Nota de {nome} registrada: {nota}")
                else:
                    print("Nota deve estar entre 0 e 10!")
            
            except ValueError:
                print("Digite uma nota v√°lida!")
        
        elif opcao == '2':
            if alunos:
                print("\n--- NOTAS DOS ALUNOS ---")
                for nome, nota in alunos.items():
                    print(f"{nome}: {nota}")
            else:
                print("Nenhuma nota registrada ainda!")
        
        elif opcao == '3':
            if alunos:
                media = sum(alunos.values()) / len(alunos)
                print(f"\n--- ESTAT√çSTICAS DA TURMA ---")
                print(f"N√∫mero de alunos: {len(alunos)}")
                print(f"M√©dia da turma: {media:.2f}")
                
                maior_nota = max(alunos.values())
                menor_nota = min(alunos.values())
                print(f"Maior nota: {maior_nota}")
                print(f"Menor nota: {menor_nota}")
            else:
                print("Nenhuma nota registrada para calcular a m√©dia!")
        
        elif opcao == '4':
            break
        
        else:
            print("Op√ß√£o inv√°lida!")

def verificar_senha():
    """3 - VERIFICADOR DE SEGURAN√áA DE SENHA"""
    print("\n=== VERIFICADOR DE SEGURAN√áA DE SENHA ===")
    print("Crit√©rios de seguran√ßa:")
    print("- Pelo menos 8 caracteres")
    print("- Pelo menos um n√∫mero")
    
    while True:
        senha = input("\nDigite sua senha (ou 'voltar' para menu principal): ")
        
        if senha.lower() == 'voltar':
            break
        
        criterios_atendidos = []
        criterios_nao_atendidos = []
        
        # Crit√©rio 1: Pelo menos 8 caracteres
        if len(senha) >= 8:
            criterios_atendidos.append("‚úì Possui pelo menos 8 caracteres")
        else:
            criterios_nao_atendidos.append("‚úó Deve ter pelo menos 8 caracteres")
        
        # Crit√©rio 2: Pelo menos um n√∫mero
        tem_numero = any(char.isdigit() for char in senha)
        if tem_numero:
            criterios_atendidos.append("‚úì Cont√©m pelo menos um n√∫mero")
        else:
            criterios_nao_atendidos.append("‚úó Deve conter pelo menos um n√∫mero")
        
        # Resultado
        print(f"\n--- AN√ÅLISE DA SENHA ---")
        print(f"Senha analisada: {'*' * len(senha)}")
        
        if criterios_atendidos:
            print("\nCrit√©rios ATENDIDOS:")
            for criterio in criterios_atendidos:
                print(f"  {criterio}")
        
        if criterios_nao_atendidos:
            print("\nCrit√©rios N√ÉO ATENDIDOS:")
            for criterio in criterios_nao_atendidos:
                print(f"  {criterio}")
        
        # Veredicto final
        if len(criterios_nao_atendidos) == 0:
            print("\nüîí SENHA SEGURA! Todos os crit√©rios foram atendidos.")
        else:
            print(f"\nüîì SENHA INSEGURA! {len(criterios_nao_atendidos)} crit√©rio(s) n√£o atendido(s).")
        
        # Dicas adicionais
        print("\n--- DICAS EXTRAS ---")
        if len(senha) < 12:
            print("üí° Para maior seguran√ßa, use pelo menos 12 caracteres")
        
        if not any(char.isupper() for char in senha):
            print("üí° Considere adicionar letras mai√∫sculas")
        
        if not any(char.islower() for char in senha):
            print("üí° Considere adicionar letras min√∫sculas")
        
        if not any(char in "!@#$%^&*()_+-=[]{}|;:,.<>?" for char in senha):
            print("üí° Considere adicionar s√≠mbolos especiais (!@#$%...)")

def analisador_numeros():
    """4 - ANALISADOR DE N√öMEROS PARES E √çMPARES"""
    print("\n=== ANALISADOR DE N√öMEROS PARES E √çMPARES ===")
    print("Digite n√∫meros para an√°lise. Digite 'fim' para ver o resultado final.")
    
    pares = []
    impares = []
    
    while True:
        entrada = input("\nDigite um n√∫mero (ou 'fim' para terminar, 'voltar' para menu): ").strip()
        
        if entrada.lower() == 'fim':
            # Exibir resultado final
            print("\n" + "="*50)
            print("RESULTADO FINAL DA AN√ÅLISE")
            print("="*50)
            
            print(f"\nüìä ESTAT√çSTICAS:")
            print(f"Total de n√∫meros analisados: {len(pares) + len(impares)}")
            print(f"N√∫meros pares: {len(pares)}")
            print(f"N√∫meros √≠mpares: {len(impares)}")
            
            if pares:
                print(f"\nüî¢ N√öMEROS PARES encontrados:")
                print(f"Lista: {pares}")
                print(f"Maior par: {max(pares)}")
                print(f"Menor par: {min(pares)}")
                print(f"Soma dos pares: {sum(pares)}")
            
            if impares:
                print(f"\nüî¢ N√öMEROS √çMPARES encontrados:")
                print(f"Lista: {impares}")
                print(f"Maior √≠mpar: {max(impares)}")
                print(f"Menor √≠mpar: {min(impares)}")
                print(f"Soma dos √≠mpares: {sum(impares)}")
            
            # Percentuais
            if pares or impares:
                total = len(pares) + len(impares)
                perc_pares = (len(pares) / total) * 100
                perc_impares = (len(impares) / total) * 100
                
                print(f"\nüìà PERCENTUAIS:")
                print(f"Pares: {perc_pares:.1f}%")
                print(f"√çmpares: {perc_impares:.1f}%")
            
            if not pares and not impares:
                print("Nenhum n√∫mero foi analisado!")
            
            input("\nPressione Enter para continuar...")
            continue
        
        elif entrada.lower() == 'voltar':
            break
        
        try:
            numero = int(entrada)
            
            if numero % 2 == 0:
                pares.append(numero)
                print(f"{numero} √© PAR")
            else:
                impares.append(numero)
                print(f"{numero} √© √çMPAR")
        
        except ValueError:
            print("Por favor, digite um n√∫mero inteiro v√°lido!")

def menu_principal():
    """MENU PRINCIPAL DO SISTEMA"""
    while True:
        print("\n" + "="*60)
        print("üîß SISTEMA COMPLETO - ESCOLHA UMA OP√á√ÉO")
        print("="*60)
        print("1 - üßÆ Calculadora B√°sica")
        print("2 - üìö Sistema de Notas dos Alunos")
        print("3 - üîí Verificador de Seguran√ßa de Senha")
        print("4 - üî¢ Analisador de N√∫meros (Pares/√çmpares)")
        print("5 - ‚ùå Sair do Sistema")
        print("="*60)
        
        opcao = input("Digite sua op√ß√£o (1-5): ").strip()
        
        if opcao == '1':
            calculadora()
        
        elif opcao == '2':
            sistema_notas()
        
        elif opcao == '3':
            verificar_senha()
        
        elif opcao == '4':
            analisador_numeros()
        
        elif opcao == '5':
            print("\nüëã Obrigado por usar o sistema! At√© logo!")
            break
        
        else:
            print("\n‚ùå Op√ß√£o inv√°lida! Escolha uma op√ß√£o de 1 a 5.")

# EXECUTAR O SISTEMA COMPLETO
if __name__ == "__main__":
    print("üöÄ Iniciando Sistema Completo...")
    menu_principal()